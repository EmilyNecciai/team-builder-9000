const inquirer = require('inquirer');
const generatePage = require('./src/page-template');
const { writeFile, copyFile } = require('./utils/generate-site');

const managerPrompt = () => {
    return inquirer
    .prompt([
      {
        type: 'input',
        name: 'managerName',
        message: "What is your team manager's name? (Required)",
        validate: managerNameInput => {
          if (managerNameInput) {
            return true;
          } else {
            console.log("Please enter your team manager's name!");
            return false;
          }
        }
      },


      {
        type: 'input',
        name: 'managerName',
        message: "What is your team manager's name? (Required)",
        validate: managerNameInput => {
          if (managerNameInput) {
            return true;
          } else {
            console.log("Please enter your team manager's name!");
            return false;
          }
        }
      }

    ])
  };
  
const promptEmp = empData => {
    console.log(`
=================
Add a New Employee
=================
    `);
  
    // If there's no 'employees' array property, create one
    if (!empData.profile) {
      empData.profile = [];
    }
    return inquirer
      .prompt([
        {
          type: 'input',
          name: 'name',
          message: "What is your Employee's Name? (Required)",
          validate: empNameInput => {
            if (empNameInput) {
              return true;
            } else {
              console.log('You need to enter a name!');
              return false;
            }
          }
        },
        {
          type: 'list',
          name: 'empTitle',
          message: "What is this employee's title?",
          choices: ['Engineer', 'Intern']
        },
        {
          type: 'confirm',
          name: 'confirmAddEmp',
          message: 'Would you like to enter another employee?',
          default: false
        }
      ])
      .then(teamData => {
        empData.profile.push(teamData);
        if (teamData.confirmAddEmp) {
          return promptEmp(empData);
        } else {
          return empData;
        }
      });
  };
  
  
managerPrompt()
    .then(promptEmp)
    .then(empData => {
        return generatePage(empData);
    })
    .then(pageHTML => {
        return writeFile(pageHTML);
    })
    .then(writeFileResponse => {
        console.log(writeFileResponse);
        return copyFile();
    })
    .then(copyFileResponse => {
        console.log(copyFileResponse);
    })
    .catch(err => {
        console.log(err);
    });
    